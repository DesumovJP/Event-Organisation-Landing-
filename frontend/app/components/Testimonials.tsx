'use client';

import { useState } from 'react';
import {
  Box,
  Container,
  Typography,
  Card,
  CardContent,
  IconButton,
  Avatar,
  Rating,
  Button,
} from '@mui/material';
import { styled } from '@mui/material/styles';
import ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';
import ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';
import OpenInNewIcon from '@mui/icons-material/OpenInNew';

function StarSvg({ filled = true }: { filled?: boolean }) {
  return (
    <svg width="28" height="28" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
      <polygon
        points="12,2 14.945,8.356 22,9.27 16.8,13.97 18.09,21 12,17.6 5.91,21 7.2,13.97 2,9.27 9.055,8.356"
        fill={filled ? '#FFC107' : 'transparent'}
        stroke="#4A90A4"
        strokeWidth="1.2"
        strokeLinejoin="miter"
        strokeMiterlimit="10"
      />
    </svg>
  );
}

const testimonials = [
  {
    id: 1,
    text: "–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥ –¥–æ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó –Ω–∞—à–æ–≥–æ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –∑–∞—Ö–æ–¥—É –≤—Ä–∞–∑–∏–≤ —É—Å—é –∫–æ–º–∞–Ω–¥—É. –ö–æ–∂–Ω–∞ –¥–µ—Ç–∞–ª—å –±—É–ª–∞ –ø—Ä–æ–¥—É–º–∞–Ω–∞ –¥–æ –¥—Ä—ñ–±–Ω–∏—Ü—å, –∞ –ø–æ–¥—ñ—è –ø—Ä–æ–π—à–ª–∞ –±–µ–∑–¥–æ–≥–∞–Ω–Ω–æ. –†–µ–∫–æ–º–µ–Ω–¥—É—é!",
    author: "–û–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–µ—Ç—Ä–µ–Ω–∫–æ",
    position: "CEO, TechCorp",
    rating: 5,
    avatar: "üë®‚Äçüíº"
  },
  {
    id: 2,
    text: "–í–µ—Å—ñ–ª—å–Ω–∞ —Ü–µ—Ä–µ–º–æ–Ω—ñ—è –±—É–ª–∞ –ø—Ä–æ—Å—Ç–æ —á–∞—Ä—ñ–≤–Ω–æ—é! –û—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä –∑—Ä–æ–±–∏–≤ –Ω–∞—à—É –º—Ä—ñ—é —Ä–µ–∞–ª—å–Ω—ñ—Å—Ç—é. –í—Å—ñ –≥–æ—Å—Ç—ñ –±—É–ª–∏ –≤ –∑–∞—Ö–≤–∞—Ç—ñ –≤—ñ–¥ —É–≤–∞–≥–∏ –¥–æ –¥–µ—Ç–∞–ª–µ–π —Ç–∞ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ–≥–æ –ø—ñ–¥—Ö–æ–¥—É.",
    author: "–ú–∞—Ä—ñ—è –ö–æ–≤–∞–ª–µ–Ω–∫–æ",
    position: "–ù–∞—Ä–µ—á–µ–Ω–∞",
    rating: 5,
    avatar: "üë∞"
  },
  {
    id: 3,
    text: "–î–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –º–æ—î—ó –¥–æ–Ω—å–∫–∏ —Å—Ç–∞–≤ —Å–ø—Ä–∞–≤–∂–Ω—ñ–º —Å–≤—è—Ç–æ–º –∑–∞–≤–¥—è–∫–∏ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω—ñ–π –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó. –î—ñ—Ç–∏ –±—É–ª–∏ –≤ –∑–∞—Ö–≤–∞—Ç—ñ, –∞ –¥–æ—Ä–æ—Å–ª—ñ –æ—Ç—Ä–∏–º–∞–ª–∏ –Ω–µ–∑–∞–±—É—Ç–Ω—ñ –≤—Ä–∞–∂–µ–Ω–Ω—è.",
    author: "–ê–Ω–¥—Ä—ñ–π –°–∏–¥–æ—Ä–µ–Ω–∫–æ",
    position: "–ë–∞—Ç—å–∫–æ",
    rating: 5,
    avatar: "üë®‚Äçüëß"
  },
  {
    id: 4,
    text: "–ù–µ–π–º–æ–≤—ñ—Ä–Ω–∏–π —Ä—ñ–≤–µ–Ω—å —Å–µ—Ä–≤—ñ—Å—É —Ç–∞ –∫–æ–º—É–Ω—ñ–∫–∞—Ü—ñ—ó. –£—Å–µ –±—É–ª–æ —á—ñ—Ç–∫–æ, –≤—á–∞—Å–Ω–æ —ñ –±–µ–∑ –∑–∞–π–≤–æ–≥–æ —Å—Ç—Ä–µ—Å—É. –°–≤—è—Ç–æ –ø—Ä–æ–π—à–ª–æ –∫—Ä–∞—â–µ, –Ω—ñ–∂ –º–∏ –æ—á—ñ–∫—É–≤–∞–ª–∏.",
    author: "–Ü—Ä–∏–Ω–∞ –ú–µ–ª—å–Ω–∏–∫",
    position: "HR Manager, BrightLabs",
    rating: 5,
    avatar: "üíº"
  },
  {
    id: 5,
    text: "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤ –Ω–∞ 200 –æ—Å—ñ–± –æ—Ä–≥–∞–Ω—ñ–∑–æ–≤–∞–Ω–æ –±–µ–∑–¥–æ–≥–∞–Ω–Ω–æ. –ü—Ä–æ–≥—Ä–∞–º–∞, –∑–≤—É–∫, —Å–≤—ñ—Ç–ª–æ ‚Äî –≤—Å–µ –Ω–∞ –≤–∏—Å–æ–∫–æ–º—É —Ä—ñ–≤–Ω—ñ. –ö–æ–ª–µ–≥–∏ –¥–æ—Å—ñ –∑–≥–∞–¥—É—é—Ç—å!",
    author: "–î–º–∏—Ç—Ä–æ –ö—Ä–∞–≤—á—É–∫",
    position: "–û–ø–µ—Ä–∞—Ü—ñ–π–Ω–∏–π –¥–∏—Ä–µ–∫—Ç–æ—Ä",
    rating: 5,
    avatar: "üé§"
  },
  {
    id: 6,
    text: "–î—É–∂–µ —Å–ø–æ–¥–æ–±–∞–ª–∞—Å—å —É–≤–∞–≥–∞ –¥–æ –¥–µ—Ç–∞–ª–µ–π —ñ –¥—Ä—É–∂–Ω—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞. –ë—É–ª–æ –≤—ñ–¥—á—É—Ç–Ω–æ, —â–æ –∫–æ–º–∞–Ω–¥–∞ —Å–ø—Ä–∞–≤–¥—ñ –ª—é–±–∏—Ç—å —Å–≤–æ—é —Å–ø—Ä–∞–≤—É.",
    author: "–û–ª–µ–Ω–∞ –®–µ–≤—á–µ–Ω–∫–æ",
    position: "–û—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä –ø–æ–¥—ñ–π",
    rating: 5,
    avatar: "üåü"
  }
];

const TestimonialCard = styled(Card)(({ theme }) => ({
  maxWidth: 800,
  margin: '0 auto',
  textAlign: 'center',
  boxShadow: theme.shadows[4],
  borderRadius: 16,
  display: 'flex',
  flexDirection: 'column',
}));

const NavigationButton = styled(IconButton)(({ theme }) => ({
  position: 'absolute',
  top: '50%',
  transform: 'translateY(-50%)',
  backgroundColor: theme.palette.background.paper,
  boxShadow: theme.shadows[4],
  '&:hover': {
    backgroundColor: theme.palette.grey[100],
  },
  '&.left': {
    left: -24,
  },
  '&.right': {
    right: -24,
  },
}));

export default function Testimonials() {
  const [currentTestimonial, setCurrentTestimonial] = useState(0);
  const [animationClass, setAnimationClass] = useState('');

  const handlePrevious = () => {
    setAnimationClass('testimonial-exit-right');
    setTimeout(() => {
      setCurrentTestimonial((prev) => 
        prev === 0 ? testimonials.length - 1 : prev - 1
      );
      setAnimationClass('testimonial-enter-left');
      setTimeout(() => setAnimationClass(''), 500);
    }, 300);
  };

  const handleNext = () => {
    setAnimationClass('testimonial-exit-left');
    setTimeout(() => {
      setCurrentTestimonial((prev) => 
        prev === testimonials.length - 1 ? 0 : prev + 1
      );
      setAnimationClass('testimonial-enter-right');
      setTimeout(() => setAnimationClass(''), 500);
    }, 300);
  };

  const current = testimonials[currentTestimonial];

  return (
    <Box sx={{ py: 12, bgcolor: '#f5f5f5' }}>
      <Container maxWidth="lg">
        <Box sx={{ textAlign: 'center', mb: 8 }}>
          <Typography
            variant="h2"
            sx={{
              fontWeight: 700,
              mb: 3,
              color: '#4A90A4',
              fontSize: { xs: '2rem', md: '3rem' },
            }}
          >
            –©–æ –∫–∞–∂—É—Ç—å –∫–ª—ñ—î–Ω—Ç–∏
          </Typography>
          <Typography
            variant="h6"
            sx={{
              color: '#000',
              fontWeight: 400,
              fontSize: '1.1rem',
            }}
          >
            –í—ñ–¥–≥—É–∫–∏ –Ω–∞—à–∏—Ö –∑–∞–¥–æ–≤–æ–ª–µ–Ω–∏—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤
          </Typography>
        </Box>

        {/* Fixed-height wrapper to avoid layout jump when slides change */}
        <Box sx={{ minHeight: { xs: '44rem', sm: '36rem', md: '34rem' } }}>
          <Box sx={{ position: 'relative', px: 4 }}>
            <NavigationButton
            className="left"
            onClick={handlePrevious}
            size="large"
            sx={{
              backgroundColor: '#fff',
              border: '1px solid #ccc',
              color: '#000',
              '&:hover': {
                backgroundColor: 'var(--primary-color)',
                color: 'white',
              },
            }}
            >
              <ArrowBackIosIcon />
            </NavigationButton>

            <TestimonialCard 
              className={animationClass}
              sx={{ 
                boxShadow: 'none', 
                border: '1px solid #ccc',
                height: { xs: '36rem', sm: '28rem', md: '26rem' },
              }}
            >
              <CardContent sx={{ p: { xs: 5, sm: 6 }, pb: 8, display: 'flex', flexDirection: 'column', flexGrow: 1 }}>
              <Avatar
                sx={{
                  width: 80,
                  height: 80,
                  mx: 'auto',
                  mb: 3,
                  fontSize: '2rem',
                  bgcolor: '#4A90A4',
                  color: '#fff',
                }}
              >
                {current.avatar}
              </Avatar>

              <Box sx={{ display: 'flex', justifyContent: 'center', mb: 3 }}>
                <Rating
                  value={current.rating}
                  readOnly
                  size="large"
                  icon={<StarSvg filled />}
                  emptyIcon={<StarSvg filled={false} />}
                  sx={{
                    '& .MuiRating-icon': { mx: 0.3 },
                  }}
                />
              </Box>

              <Box sx={{ flexGrow: 1, display: 'flex', alignItems: 'center' }}>
                <Typography
                  variant="h6"
                  sx={{
                    fontStyle: 'italic',
                    mb: 4,
                    lineHeight: 1.7,
                    color: '#000',
                    maxWidth: 600,
                    mx: 'auto',
                    fontSize: '1.1rem',
                  }}
                >
                  "{current.text}"
                </Typography>
              </Box>

              <Typography
                variant="h6"
                sx={{
                  fontWeight: 600,
                  color: '#000',
                  mb: 1,
                  fontSize: '1.1rem',
                }}
              >
                {current.author}
              </Typography>

              <Typography
                variant="body2"
                sx={{
                  color: '#000',
                  fontWeight: 500,
                  fontSize: '1rem',
                }}
              >
                {current.position}
              </Typography>
              </CardContent>
            </TestimonialCard>

            <NavigationButton
              className="right"
              onClick={handleNext}
              size="large"
              sx={{
                backgroundColor: '#fff',
                border: '1px solid #ccc',
                color: '#000',
                '&:hover': {
                  backgroundColor: 'var(--primary-color)',
                  color: 'white',
                },
              }}
            >
              <ArrowForwardIosIcon />
            </NavigationButton>
          </Box>

          {/* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä–∏ */}
          <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4, gap: 1 }}>
            {testimonials.map((_, index) => (
              <Box
                key={index}
                onClick={() => {
                  if (index !== currentTestimonial) {
                    setAnimationClass('testimonial-exit-left');
                    setTimeout(() => {
                      setCurrentTestimonial(index);
                      setAnimationClass('testimonial-enter-right');
                      setTimeout(() => setAnimationClass(''), 500);
                    }, 300);
                  }
                }}
                sx={{
                  width: 12,
                  height: 12,
                  borderRadius: '50%',
                  backgroundColor: index === currentTestimonial ? '#4A90A4' : '#ccc',
                  cursor: 'pointer',
                  transition: 'all 0.3s ease',
                  '&:hover': {
                    backgroundColor: 'var(--primary-color)',
                    transform: 'scale(1.2)',
                  },
                }}
              />
            ))}
          </Box>
        </Box>

        {/* –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ Girko */}
        <Box sx={{ textAlign: 'center', mt: 0 }}>
          <Typography
            variant="body1"
            sx={{
              color: '#000',
              mb: 3,
              fontWeight: 500,
              fontSize: '1rem',
            }}
          >
            –ë—ñ–ª—å—à–µ –≤—ñ–¥–≥—É–∫—ñ–≤ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ñ Girko
          </Typography>
          <Button
            variant="outlined"
            component="a"
            href="https://girko.net/profile/13866/reviews/"
            target="_blank"
            rel="noopener noreferrer"
            endIcon={<OpenInNewIcon />}
            sx={{
              border: '1px solid #000',
              color: '#000',
              backgroundColor: '#fff',
              px: 4,
              py: 1.5,
              borderRadius: 0,
              textTransform: 'none',
              fontSize: '1rem',
              fontWeight: 500,
              '&:hover': {
                border: '1px solid var(--primary-color)',
                backgroundColor: 'var(--primary-color)',
                color: 'white',
              },
              transition: 'all 0.3s ease-in-out',
            }}
          >
            –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—Å—ñ –≤—ñ–¥–≥—É–∫–∏
          </Button>
        </Box>
      </Container>
    </Box>
  );
}
